name: Make Release

on:
  workflow_dispatch:
    inputs:
      title:
        description: 'Release title'
        required: true
        default: 'Zaxor Vane Filters'

# Needed to create tags & releases
permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history for tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Build (generates dist/filters.json even if nothing is committed in dist/)
      - name: Build filters
        run: |
          mkdir -p dist
          # If you keep index.js in repo, run it; otherwise write a safe default
          if [ -f index.js ]; then
            node index.js || true
          fi
          if [ ! -f dist/filters.json ]; then
            cat > dist/filters.json <<'EOF'
            {
              "focus": ["military", "cyber", "blackout", "blockade", "sanctions", "anomaly"],
              "avoid": ["celebrity gossip", "sports drama"],
              "whitelist_sources": ["Reuters","DW","BBC","AP","Al Jazeera","ZeroHedge","Grayzone","MintPress"],
              "boost": ["breaking","leak","satellite","troop movement","energy grid","currency swap"]
            }
            EOF
          fi
          echo "Built files:"
          ls -lah dist/

      # Generate a unique tag so we never collide (fixes exit code 128/2 on reused tags)
      - name: Make unique tag
        id: tag
        run: echo "TAG=v$(date +%Y.%m.%d-%H%M%S)" >> $GITHUB_ENV

      # Create or update the release and attach the file
      - name: Create/Update Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.TAG }}
          name: ${{ github.event.inputs.title }}
          artifacts: "dist/filters.json"
          artifactErrorsFailBuild: true
          allowUpdates: true
          replacesArtifacts: true
